#var program,block,decls,decl,init_decl,idlist,declarator,array_decl,
     compare,
     selection,
     iteration,
     init_list,stmts,stmt,expr,bool_,join,equality,rel,add,term_,unary,postfix,factor;
#term LCB,RCB,LSB,RSB,COMMA,SEM,
     ID,BREAK,
     BASIC,NUM,IF,ELSE,FOR,DO,WHILE,REAL,TRUE,FALSE,LB,RB,
     INC,DEC,PLUS,MIN,DIV,MULT,
     ASS,OR,AND,GT,GE,NE,EQ,LS,LE,NOT;

!program = block ;
!block   = LCB decls stmts RCB;
!decls   = decls decl | %;
!decl    = BASIC idlist SEM;
!init_list = init_list COMMA expr | expr;
!idlist  = idlist COMMA declarator|declarator;
!declarator = ID | ID ASS expr | array_decl;
!array_decl = ID LSB NUM RSB | ID LSB NUM RSB ASS LCB init_list RCB;

!stmts = stmts stmt | %;
!stmt  = selection
        | iteration
        | BREAK SEM
        | block
        | expr SEM ;

!iteration =  WHILE LB expr RB stmt
            | DO stmt WHILE LB expr RB SEM
            | FOR LB expr SEM expr SEM expr RB stmt;
   
!selection =  IF LB expr RB stmt
            | IF LB expr RB stmt ELSE stmt;

!factor = ID|NUM|LB expr RB;//May be string here
!postfix = factor | factor LSB expr RSB | factor INC | factor DEC;
!unary = postfix | NOT unary | MIN unary|INC unary|DEC unary;
!term_ = term_ MULT unary|term_ DIV unary | unary;
!add  = add PLUS term_ | add MIN term_ | term_;
!rel = rel GT add|rel LS add|rel GT add|rel LE add|add;
!equality = equality EQ rel | equality NE rel |rel;
!join = join AND equality | equality;
!bool_ = bool_ OR join | join;
!expr = unary ASS expr | bool_;

*program;
7
